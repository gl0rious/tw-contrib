#! /bin/bash
# savedatabases command,  by Benameur Abdelhak
UCONF=`whoami`
[ "x$UCONF" != "xroot" ] && echo "savedatabases must be run as root" && exit
echo ""
echo "SAUVEGARDE DES BASES DE DONNEES INFORMIX : (by Benameur Abdelhak)"
echo 
#echo "Voulez-vous confirmer (y/n) ?"
#pkill -9 -u pension,fonct,relance,relop
#read UCONF
#[ "x$UCONF" != "xy" -a "x$UCONF" != "xY" ] && exit
#unset UCONF

CURDIR=`pwd`
TMPDIR="/tmp/tmp523654"
rm -rf $TMPDIR > /dev/null
mkdir $TMPDIR > /dev/null && chmod 777 $TMPDIR -R > /dev/null && cd $TMPDIR
NEWDIR=`date +%Y%m%d`
FILE01="f253612"
FILE02="f253613"
pbclr()
{ echo $1 $2 $3|awk '{ 
                 printf("Export & Save : ") ; printf($1) ;printf("/") ; printf($2) ;
                 i=length($1$2);
                 for (k=1 ; k <= 50-i; k++ ) printf("%c","."); 
                 printf(" ") ; printf($3) ; printf("\n") ;
  }'
 }
_export_database () {
       rm -rf $2.tar.gz > /dev/null
       su $1 -c ". /etc/bashrc && dbexport -c  $2" > /dev/null
       if [ -d $2.exp ]; then
            tar czvf  $2.tar.gz $2.exp > /dev/null
            rm -rf $2.exp
            pbclr $1 $2 "Ok"
       else
            pbclr $1 $2 "Error"
       fi
       rm -rf dbexport.out
}
su informix -c "dbaccess - - > /dev/null 2>&1 <<! 
   set lock mode to wait; 
   database sysmaster; 
   unload to "$FILE01" select owner,name from sysdatabases where name<>'sysmaster' 
   and name<>'syspgm4gl' and name<>'sysuser' and name<>'sysutils' order by owner,name;
   !"
sed -i "s/^/_export_database /g" $FILE01
cat $FILE01 | tr "|" " ">$FILE02 && chmod +x $FILE02
clear
echo 
tput smso&&echo "SAUVEGARDE DES BASES DE DONNEES INFORMIX : (by Benameur Abdelhak)     "&&tput rmso
echo "----------------------------------------------------------------------"
. ./$FILE02
echo 
echo "Archiving all file *.tar.gz into file DATABASE$NEWDIR.SAVE"
tar czvf $CURDIR/DATABASE$NEWDIR.SAVE  *.tar.gz > /dev/null
XX="Creating file DATABASE$NEWDIR.SAVE................................"
if [ -f $CURDIR/DATABASE$NEWDIR.SAVE ]; then
     echo "$XX Ok"
else
     echo "$XX Error" 
fi
ls -l $CURDIR/DATABASE$NEWDIR.SAVE
cd $CURDIR && rm -rf $TMPDIR
echo 
echo "OpÃ©ration terminer."
echo "################ Backup to NAS ################"
if ! lsscsi | grep QNAP > /dev/null; then
        echo "QNAP NAS was not connected"
        /etc/init.d/iscsi restart > /dev/null
        sleep 3
fi
if ! mountpoint /diskserv2 > /dev/null; then
        echo "NAS parent directory was not mounted"
        mount -a
fi
if [ -d "/diskserv2/informix" ]; then
        echo "Copying Informix backups to NAS"
	cp -vu /root/DATABASE* /diskserv2/informix
	find /root/DATABASE* -type f -mtime +14 -delete
else
        echo "Informix backup NAS directory does not exist"
fi
